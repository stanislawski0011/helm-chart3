# Default values for my-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount:
  development: 3
  production: 5

image:
  repository: busybox
  tag: "stable"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      targetPort: 8080
    - name: logs
      port: 8081
      targetPort: 8081
    - name: soap
      port: 8082
      targetPort: 8082

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    development:
      - host: dev.example.local
        paths:
          - path: /api
            pathType: Prefix
            port: 8080
          - path: /logs
            pathType: Prefix
            port: 8081
          - path: /soap
            pathType: Prefix
            port: 8082
    production:
      - host: example.local
        paths:
          - path: /api
            pathType: Prefix
            port: 8080
          - path: /logs
            pathType: Prefix
            port: 8081
          - path: /soap
            pathType: Prefix
            port: 8082
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

configMap:
  config.json: |
    {
      "environment": "development",
      "logging": {
        "level": "INFO",
        "format": "json"
      },
      "features": {
        "enabled": true
      }
    }

spring:
  profiles:
    development: dev
    production: prd

livenessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10

terminationGracePeriodSeconds: 30
