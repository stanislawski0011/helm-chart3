apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-chart.fullname" . }}
  labels:
    {{- include "my-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ if eq .Values.environment "production" }}{{ .Values.replicaCount.production }}{{ else }}{{ .Values.replicaCount.development }}{{ end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "my-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ get .Values.configMap "config.json" | default "{}" | quote | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "my-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "my-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--spring.profiles.active={{ if eq .Values.environment "production" }}{{ .Values.spring.profiles.production }}{{ else }}{{ .Values.spring.profiles.development }}{{ end }}"
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: logs
              containerPort: 8081
              protocol: TCP
            - name: soap
              containerPort: 8082
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-chart.fullname" . }}-secret
                  key: DB_PASSWORD
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-chart.fullname" . }}-secret
                  key: API_KEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-chart.fullname" . }}-secret
                  key: JWT_SECRET
          volumeMounts:
            - name: config-volume
              mountPath: /app/config.json
              subPath: config.json
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "wget http://localhost:8080/service/shutdown"]
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "my-chart.fullname" . }}-config
